a=(Abby,Britney,Cat,Diane,Evey)
a=Abby,Britney,Cat,Diane,Evey
a=1,2,3,4,5
a<-5
a=c("abby","britney","cat","diane","Evey")
a[3]
a[1,2]
a[1:2]
M=matrix(1;4,nrow=2,ncol=2)
M=matrix(1:4,nrow=2,ncol=2)
View(M)
a=list(a,M)
a=c("abby","britney","cat","diane","Evey")
b=list(a,M)
View(M)
b[[1]][4]
b[[1]][4:5]
b[[1]][4,5]
fence=function(original,wrapper){
answer=c(wrapper,original,wrapper)
return(answer)
}
fence("hi","i am corgi")
mySum=function(input_1,input_2=10){
output=input_1+input_2
return(output)
}
mySum(input_1=1,3)
mySum(1,3)
mySum(1,5)
mySum(1)
mySum(input_2=3)
rm(list=ls())
setwd("C:/Users/raven/Desktop/biocomputing/exercise6/Biocomp-Fall2018-181005-Exercise6/")
iris=read.csv("iris.csv",stringsAsFactor=F)
dim(iris)
rownumber=dim(iris)-2
rownumber
(last2=iris[148:150,3:5])
(last2=iris[149:150,4:5])
iris[dim(iris)-1]
iris[dim(iris)]
iris[dim(iris),1]
iris[dim(iris),5]
iris[nrow(iris)-1:nrow(iris),4:5]
nrow(iris)
nrow(iris)-1
iris[nrow(iris)-1:nrow(iris),4:5]
iris[(nrow(iris)-1):nrow(iris),4:5]
iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)]
(last2=iris[149:150,4:5])
iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)]
last2.2=iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)]
(last2.2=iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)])
(last2=iris[149:150,4:5])
(last2.2=iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)])
rm(list=ls())
iris=read.csv("iris.csv",stringsAsFactor=F)
(last2=iris[149:150,4:5])
(last2.2=iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)])
iris=read.csv("iris.csv",header=T,stringsAsFactor=F)
count(iris,vars="setosa")
?grep
grep("setosa",iris)
iris=read.csv("iris.csv",header=T,stringsAsFactor=F)
grep("setosa",iris)
?table
iris$Species
iriscountspecies=table(iris$Species)
(iriscountspecies=table(iris$Species))
(iriscountspecies=as.data.frae(table(iris$Species)))
(iriscountspecies=as.data.frame(table(iris$Species)))
irisbigsepal=(iris$Sepal.Length>3.5,)
irisbigsepal=iris[iris$Sepal.Length>3.5,]
(irisbigsepal=iris[iris$Sepal.Length>3.5,])
#index, all the rows where sepal length>3.5, take all columns
min(iris$Sepal.Length)
(irisbigsepal=iris[iris$Sepal.Width>3.5,])
(irisbigsepal=iris[iris$Sepal.Width>3.5,])
#index, all the rows where sepal width>3.5, take all columns
min(iris$Sepal.Width)
#index, all the rows where sepal width>3.5, take all columns
max(iris$Sepal.Width)
iris[iris$Species=setosa,]
iris[iris$Species=="setosa",]
?write.table
write.table(iris[iris$Species=="setosa",],file="setosa.csv",sep=",")
virginica=iris[iris$Species="virginica",]
virginica=iris[iris$Species=="virginica",]
virginica=iris[iris$Species=="virginica",]
virginica
#make a separate dataframe first with all the virginica data
(virginicamean=mean(virginica$Petal.Length))
?colMean
?colMeans
(min_petal_length=min(virginica$Petal.Length))
(max_petal_length=max(virginica$Petal.Length))
rm(list=ls())
setwd("C:/Users/raven/Desktop/biocomputing/exercise6/Biocomp-Fall2018-181005-Exercise6/")
iris=read.csv("iris.csv",header=T,stringsAsFactor=F)
(last2=iris[149:150,4:5])
(last2.2=iris[(nrow(iris)-1):nrow(iris),(ncol(iris)-1):ncol(iris)])
(iriscountspecies=as.data.frame(table(iris$Species)))
(irisbigsepal=iris[iris$Sepal.Width>3.5,])
write.table(iris[iris$Species=="setosa",],file="setosa.csv",sep=",")
#index, all the rows where sepal width>3.5, take all columns
#to check, enable the following line
(min(irisbigsepal$Sepal.Width))
virginica=iris[iris$Species=="virginica",]
#make a separate dataframe first with all the virginica data
(mean_petal_length=mean(virginica$Petal.Length))
(min_petal_length=min(virginica$Petal.Length))
(max_petal_length=max(virginica$Petal.Length))
(irisbigsepal=iris[iris$Sepal.Width>3.5,])
